---

- name: Check if vm.swappiness is already set
  command: grep -q '^vm.swappiness = 1' /etc/sysctl.conf
  register: vm_swappiness_check
  ignore_errors: true
  changed_when: false

- name: Set vm.swappiness to 1 in /etc/sysctl.conf
  lineinfile:
    path: /etc/sysctl.conf
    state: present
    line: "vm.swappiness = 1"
  when: vm_swappiness_check.rc != 0

- name: Apply vm.swappiness setting immediately
  command: sysctl -w vm.swappiness=1
  #when: vm_swappiness_check.rc != 0

- name: Check if soft limit for MySQL nofile is already set
  command: grep -q '^mysql soft nofile 4096' /etc/security/limits.conf
  register: soft_limit_check
  ignore_errors: true
  changed_when: false

- name: Check if hard limit for MySQL nofile is already set
  command: grep -q '^mysql hard nofile 65536' /etc/security/limits.conf
  register: hard_limit_check
  ignore_errors: true
  changed_when: false

- name: Set hard limit for MySQL nofile in /etc/security/limits.conf
  lineinfile:
    path: /etc/security/limits.conf
    state: present
    line: "mysql hard nofile 65536"
  become: yes
  when: hard_limit_check.rc != 0

- name: Apply soft and hard limits for MySQL user
  lineinfile:
    path: /etc/security/limits.conf
    line: "mysql soft nofile 4096"
    state: present
  become: yes
  when: hard_limit_check.rc != 0

- name: Reload limits configuration
  shell: "sysctl -p"
  become: yes
  

- name: Print OS family
  debug:
    var: ansible_os_family

- name: Display OS major and minor version
  debug:
    msg: "OS Major version: {{ ansible_distribution_version.split('.')[0] }}, OS Minor version: {{ ansible_distribution_version.split('.')[1] | default('0') }}"

- name: Get the list of installed MySQL packages
  shell: "rpm -qa | grep '{{ dbms }}' || true"
  register: mysql_package_list
  changed_when: false

- name: Remove MySQL packages
  yum:
    name: "{{ item }}"
    state: absent
  loop: "{{ mysql_package_list.stdout_lines }}"
  when: (mysql_package_list.stdout_lines | length > 0) and (force_initialize == true)

- name: Check if MySQL data directory exists
  stat:
    path: /var/lib/mysql
  register: mysql_data_dir

- name: Remove MySQL data directory
  file:
    path: /var/lib/mysql
    state: absent
  when: mysql_data_dir.stat.exists

- name: Install necessary dependencies
  dnf:
    name:
      - openssl-devel
      - perl
      - perl-JSON
    state: present
  when: dbms == "mysql"


- name: Ensure development tools and Python dependencies are installed
  yum:
    name:
      - gcc
      - rust
      - cargo
      - python3-devel
      - libffi-devel
      - openssl-devel
      - python3-pip
    state: present


- name: Upgrade pip to the latest version
  pip:
    name: pip
    executable: pip3
    state: latest

- name: Install cryptography via pip
  pip:
    name: cryptography
    executable: pip3


- name: Install PyMySQL via pip
  pip:
    name: PyMySQL
    executable: pip3